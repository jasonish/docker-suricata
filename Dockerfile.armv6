# Alpine linux/arm/v6 as of 2020-08-05
ARG BASE_IMAGE=alpine@sha256:71465c7d45a086a2181ce33bb47f7eaef5c233eace65704da0c5e5454a79cee5

FROM $BASE_IMAGE AS builder

RUN apk add \
        automake \
        autoconf \
        cargo \
        curl \
        elfutils-dev \
        file-dev \
        gcc \
        git \
        hiredis-dev \
        jansson-dev \
        libpcap-dev \
        libelf \
        libbpf-dev \
        libnetfilter_queue-dev \
        libnetfilter_log-dev \
        libtool \
        linux-headers \
        libcap-ng-dev \
        make \
        musl-dev \
        nss-dev \
        pcre-dev \
        python3 \
        py3-yaml \
        rust \
        yaml-dev \
        zlib-dev

WORKDIR /src

ARG VERSION
RUN curl -OL https://www.openinfosecfoundation.org/download/suricata-${VERSION}.tar.gz
RUN tar zxf suricata-${VERSION}.tar.gz

WORKDIR /src/suricata-${VERSION}

RUN ./configure \
        --prefix=/usr \
        --sysconfdir=/etc \
        --localstatedir=/var \
        --disable-shared \
        --disable-gccmarch-native \
        --enable-ebpf \
        --enable-nfqueue \
        --enable-hiredis

ARG CORES=2

RUN make -j "${CORES}"

RUN make install install-conf DESTDIR=/fakeroot

# Something about the Docker mounts won't let us copy /var/run in the
# next stage.
RUN rm -rf /fakeroot/var

FROM $BASE_IMAGE AS runner

RUN apk add \
        hiredis \
        jansson \
        libcap \
        libcap-ng \
        libpcap \
        libelf \
        libbpf \
        libnetfilter_queue \
        libnetfilter_log \
        libmagic \
        nss \
        pcre \
        py3-yaml \
        python3 \
        yaml \
        zlib

COPY --from=builder /fakeroot /

# Create the directories that didn't get coped from the previous stage.
RUN mkdir -p /var/log/suricata /var/run/suricata

COPY /update.yaml /etc/suricata/update.yaml
COPY /suricata.logrotate /etc/logrotate.d/suricata

RUN suricata-update update-sources && \
        suricata-update enable-source oisf/trafficid && \
        suricata-update --no-test --no-reload && \
        /usr/bin/suricata -V

RUN addgroup suricata && \
        adduser -S -G suricata suricata && \
        chown -R suricata:suricata /etc/suricata && \
        chown -R suricata:suricata /var/log/suricata && \
        chown -R suricata:suricata /var/lib/suricata && \
        chown -R suricata:suricata /var/run/suricata && \
        cp -a /etc/suricata /etc/suricata.dist && \
        chmod 600 /etc/logrotate.d/suricata

VOLUME /var/log/suricata
VOLUME /var/lib/suricata
VOLUME /etc/suricata

COPY /docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]

ARG BUILD_DATE
RUN echo "${BUILD_DATE}" > /etc/build_date
