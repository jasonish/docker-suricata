FROM docker.io/arm64v8/alpine:latest AS builder

RUN apk add \
        automake \
        autoconf \
        cargo \
        cbindgen \
        curl \
        elfutils-dev \
        file-dev \
        gcc \
        git \
        hiredis-dev \
        jansson-dev \
        libpcap-dev \
        libelf \
        libbpf-dev \
        libmaxminddb-dev \
        libnet-dev \
        libnetfilter_queue-dev \
        libnetfilter_log-dev \
        libtool \
        linux-headers \
        libcap-ng-dev \
        make \
        musl-dev \
        nss-dev \
        pcre-dev \
        python3 \
        py3-yaml \
        rust \
        yaml-dev \
        zlib-dev

ARG VERSION

WORKDIR /src

RUN if [ "${VERSION}" = "master" ]; then \
	git clone https://github.com/OISF/suricata.git suricata-${VERSION}; \
	git clone https://github.com/OISF/libhtp.git suricata-${VERSION}/libhtp; \
        (cd suricata-${VERSION}/suricata-update && \
		curl -L https://github.com/OISF/suricata-update/archive/master.tar.gz | tar zxf - --strip-components=1); \
	(cd suricata-${VERSION} && ./autogen.sh); \
else \
	curl -OL https://www.openinfosecfoundation.org/download/suricata-${VERSION}.tar.gz; \
	tar zxf suricata-${VERSION}.tar.gz; \
fi

WORKDIR /src/suricata-${VERSION}

ARG CONFIGURE_ARGS

RUN ./configure \
        --prefix=/usr \
        --sysconfdir=/etc \
        --localstatedir=/var \
        --disable-shared \
        --disable-gccmarch-native \
        --enable-nfqueue \
        --enable-hiredis \
        --enable-geoip \
	${CONFIGURE_ARGS}

ARG CORES=2

RUN make -j "${CORES}"

RUN make install install-conf DESTDIR=/fakeroot

# Something about the Docker mounts won't let us copy /var/run in the
# next stage.
RUN rm -rf /fakeroot/var

FROM docker.io/arm64v8/alpine:latest AS runner

RUN apk add \
        bash \
        hiredis \
        jansson \
        libcap \
        libcap-ng \
        libpcap \
        libelf \
        libbpf \
        libmaxminddb \
        libnet \
        libnetfilter_queue \
        libnetfilter_log \
        libmagic \
        logrotate \
        nss \
        pcre \
        py3-yaml \
        python3 \
        shadow \
        yaml \
        zlib && \
        find /etc/logrotate.d -type f -not -name suricata -delete

COPY --from=builder /fakeroot /

# Create the directories that didn't get coped from the previous stage.
RUN mkdir -p /var/log/suricata /var/run/suricata

COPY /update.yaml /etc/suricata/update.yaml
COPY /suricata.logrotate /etc/logrotate.d/suricata

RUN suricata-update update-sources && \
        suricata-update enable-source oisf/trafficid && \
        suricata-update --no-test --no-reload && \
        /usr/bin/suricata -V

RUN addgroup suricata && \
        adduser -S -G suricata suricata && \
        chown -R suricata:suricata /etc/suricata && \
        chown -R suricata:suricata /var/log/suricata && \
        chown -R suricata:suricata /var/lib/suricata && \
        chown -R suricata:suricata /var/run/suricata && \
        cp -a /etc/suricata /etc/suricata.dist && \
        chmod 600 /etc/logrotate.d/suricata

VOLUME /var/log/suricata
VOLUME /var/lib/suricata
VOLUME /etc/suricata

COPY /docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]
